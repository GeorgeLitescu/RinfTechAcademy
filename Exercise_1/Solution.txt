1. Serialization is appropriate when saving data for non-Java programs to use.
	FALSE

2. Object state can be saved only by using serialization.
	TRUE

3. ObjectOutputStream is a class used to save serialized objects.
	TRUE

4. Chain streams can be used on their own or with connection streams.
	FALSE

5. A single call to writeObject() can cause many objects to be saved.
	FALSE

6. All classes are serializable by default.
	FALSE

7. The transient modifier allows you to make instance variables serializable.
	FALSE

8. If a superclass is not serializable then the subclass can’t be serializable.
	FALSE	

9. When objects are deserialized, they are read back in last-in, first out sequence.
	FALSE

10. When an object is deserialized, its constructor does not run.
	TRUE

11. Both serialization and saving to a text file can throw exceptions.
	TRUE

12. BufferedWriters can be chained to FileWriters.
	TRUE

13. File objects represent files, but not directories.
	FALSE

14. You can’t force a buffer to send its data before it’s full.
	FALSE

15. Both file readers and file writers can be buffered.
	TRUE

16. The String split() method includes separators as tokens in the result array.
	FALSE

17. Any change to a class breaks previously serialized objects of that class.
	FALSE